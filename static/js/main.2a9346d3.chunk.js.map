{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","id","classNames","completed","title","TodoList","todos","map","username","getUser","userId","usersFromServer","find","initialTodos","maxTodoId","sort","a","b","length","App","useState","setTitle","setUserId","setTodos","todoId","setTodoId","isEmptyTitle","setIsEmptyTitle","isEmptyUser","setIsEmptyUser","action","method","onSubmit","event","preventDefault","trim","prevId","currTodo","prevTodos","htmlFor","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2a9346d3.chunk.js","sourcesContent":["import { User } from '../../types/User';\n\ntype Props = {\n  user: User\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={classNames(\n        'TodoInfo',\n        { 'TodoInfo--completed': todo.completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      {todo.user && (<UserInfo user={todo.user} />)}\n    </article>\n  );\n};\n","import { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[]\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { useState } from 'react';\nimport './App.scss';\nimport { TodoList } from './components/TodoList';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const initialTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nconst maxTodoId = initialTodos\n  .map(todo => todo.id)\n  .sort((a, b) => a - b)[initialTodos.length - 1];\n\nexport const App: React.FC = () => {\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [todos, setTodos] = useState(initialTodos);\n  const [todoId, setTodoId] = useState(maxTodoId);\n  const [isEmptyTitle, setIsEmptyTitle] = useState(false);\n  const [isEmptyUser, setIsEmptyUser] = useState(false);\n\n  const changeTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    if (event.target.value.trim() !== '') {\n      setIsEmptyTitle(false);\n    }\n  };\n\n  const changeId = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    if (+event.target.value !== 0) {\n      setIsEmptyUser(false);\n    }\n  };\n\n  const handleSubmit = (event: React.ChangeEvent<HTMLFormElement>) => {\n    event?.preventDefault();\n    if (title.trim() === '' || userId === 0) {\n      if (title.trim() === '') {\n        setIsEmptyTitle(true);\n      }\n\n      if (userId === 0) {\n        setIsEmptyUser(true);\n      }\n\n      return;\n    }\n\n    setTodoId(prevId => prevId + 1);\n\n    const currTodo: Todo = {\n      id: todoId + 1,\n      title,\n      completed: false,\n      userId,\n      user: getUser(userId),\n    };\n\n    setTodos(prevTodos => [...prevTodos, currTodo]);\n    setTitle('');\n    setUserId(0);\n    setIsEmptyTitle(false);\n    setIsEmptyUser(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title: </label>\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            id=\"title\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={changeTitle}\n          />\n          {\n            isEmptyTitle\n            && (<span className=\"error\">Please enter a title</span>)\n          }\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"user\">User: </label>\n          <select\n            data-cy=\"userSelect\"\n            id=\"user\"\n            value={userId}\n            onChange={changeId}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n\n            {usersFromServer.map(user => (\n              <option value={user.id} key={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {isEmptyUser && (<span className=\"error\">Please choose a user</span>)}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}